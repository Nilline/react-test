{"version":3,"sources":["components/error/error.gif","components/error/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_apiBabe","_apiKey","_baseOffset","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","comics","thumbnail","path","extension","title","price","prices","description","pageCount","language","textObjects","char","name","slice","homepage","urls","wiki","items","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","AppBanner","className","avengers","avengersLogo","ComicsList","listChars","setCharsList","newCharsLoading","setNewCharsLoading","setOffset","ended","setEnded","useEffect","onRequest","initial","then","onComicsLoaded","newListChars","length","charEnded","spinner","Spinner","errorMessage","componentsList","arr","item","i","to","renderItems","onClick","disabled","ComicsPage"],"mappings":"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","file":"static/js/4.2160b90e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='error'/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst _apiBabe = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=744a96d18fccecddd408e2d153c70566';\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst {loading, error, request, clearError} = useHttp();\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBabe}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBabe}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBabe}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBabe}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tthumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tprice: `${comics.prices[0].price ? comics.prices[0].price : 'NOT AVAILABLE'}`,\r\n\t\t\tid: comics.id,\r\n\t\t\tdescription: comics.description ? comics.description : 'There is no description for this comics',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} pages` : \"No information about the number of pages\",\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\"\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {loading, error, clearError, getCharacter, getAllCharacters, getAllComics, getComic};\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn {loading, error, request, clearError};\r\n}","import { Component } from \"react/cjs/react.production.min\";\r\n\r\nimport ErrorMessage from \"../error/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) return <ErrorMessage/>;\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../error/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\tconst [listChars, setCharsList] = useState([]);\n\tconst [newCharsLoading, setNewCharsLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [ended, setEnded] = useState(false);\n\n\tconst {loading, error, clearError, getAllComics} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, [])\n\n\tconst onRequest = ((offset, initial) => {\n\t\tclearError();\n\t\tinitial ? setNewCharsLoading(false) : setNewCharsLoading(true);\n\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsLoaded)\n\t})\n\n\tconst onComicsLoaded = (newListChars) => {\n\n\t\tlet ended = false;\n\t\tif (newListChars.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharsList(listChars => [...listChars, ...newListChars]);\n\t\tsetOffset(offset => offset + 8);\n\t\tsetNewCharsLoading(false);\n\t\tsetEnded(charEnded => ended);\n\t}\n\n\tconst renderItems = (arr) => {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tconst {id, price, thumbnail, title} = item;\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"comics__item\"\n\t\t\t\t\tkey={i}>\n\t\t\t\t\t<Link to={`/comics/${id}`}>\n\t\t\t\t\t\t<img src={thumbnail} alt={title} className=\"comics__item-img\"/>\n\t\t\t\t\t\t<div className=\"comics__item-name\">{title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{`${price}$`}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t)\n\t}\n\n\tconst spinner = loading && !newCharsLoading ? <Spinner/> : null;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst componentsList = renderItems(listChars);\n\n    return (\n        <div className=\"comics__list\">\n\t\t\t\t{spinner}\n\t\t\t\t{errorMessage}\n\t\t\t\t{componentsList}\n            <button\n\t\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t\t\tdisabled={newCharsLoading}\n\t\t\t\t\tstyle={{'display': ended ? 'none': 'block'}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner/>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<ComicsList/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}